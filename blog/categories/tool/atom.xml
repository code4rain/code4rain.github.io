<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tool | Code4Rain`s Blog]]></title>
  <link href="http://code4rain.github.com/blog/categories/tool/atom.xml" rel="self"/>
  <link href="http://code4rain.github.com/"/>
  <updated>2014-08-08T21:23:53+09:00</updated>
  <id>http://code4rain.github.com/</id>
  <author>
    <name><![CDATA[Alex Kyoungdon Jang]]></name>
    <email><![CDATA[code4rain@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TMUX설정]]></title>
    <link href="http://code4rain.github.com/blog/2014/08/06/tmuxseoljeong/"/>
    <updated>2014-08-06T16:46:00+09:00</updated>
    <id>http://code4rain.github.com/blog/2014/08/06/tmuxseoljeong</id>
    <content type="html"><![CDATA[<h2>TMUX</h2>

<p>TMUX는 터미널화면을 분할하거나 Tab을 만들어서 사용할 수 있도록 도와주는 툴입니다.</p>

<p>비슷한 프로그램으로는 <a href="https://www.gnu.org/software/screen/" title="스크린">screen</a>이 있습니다.</p>

<p>TMUX에 간단한 소개는 아래 링크를 참고하세요.</p>

<ul>
<li><a href="http://nodeqa.com/nodejs_ref/99">http://nodeqa.com/nodejs_ref/99</a></li>
</ul>


<h2>나의 TMUX설정</h2>

<p>설정 후 화면 - 상단에 3개의 window가 떠 있는 것을 확인할 수 있다.
<img src="../images/tmux_preview.png"></p>

<h3>.tmux.conf 내용</h3>

<p>``` bash</p>

<h2>.tmux.conf 내용</h2>

<h1>use UTF8</h1>

<p>set -g utf8
set-window-option -g utf8 on</p>

<h1>make tmux display things in 256 colors</h1>

<h1>set -g default-terminal "screen-256color"</h1>

<p>set -g default-terminal "xterm"
set-window-option -g xterm-keys on</p>

<h1>set scrollback history to 10000 (10k)</h1>

<p>set -g history-limit 10000</p>

<h1>set Ctrl-a as the default prefix key combination</h1>

<h1>and unbind C-b to free it up</h1>

<p>set -g prefix C-j
unbind C-b
unbind C-a</p>

<h1>use send-prefix to pass C-a through to application</h1>

<p>bind C-j send-prefix</p>

<h1>shorten command delay</h1>

<p>set -sg escape-time 1</p>

<h1>set window and pane index to 1 (0 by default)</h1>

<p>set-option -g base-index 1
setw -g pane-base-index 1</p>

<h1>reload ~/.tmux.conf using PREFIX r</h1>

<p>bind r source-file ~/.tmux.conf \; display "Reloaded!"</p>

<h1>use PREFIX | to split window horizontally and PREFIX - to split vertically</h1>

<p>bind | split-window -h
bind \ split-window -h
bind - split-window -v</p>

<h1>Make the current window the first window</h1>

<p>bind T swap-window -t 1</p>

<h1>map Vi movement keys as pane movement keys</h1>

<p>bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R</p>

<h1>and use C-h and C-l to cycle thru panes</h1>

<p>bind -r C-h select-window -t :-
bind -r C-l select-window -t :+</p>

<h1>resize panes using PREFIX H, J, K, L</h1>

<p>bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5</p>

<h1>explicitly disable mouse control</h1>

<p>set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set-option -g mouse-utf8 on</p>

<h1>---------------------</h1>

<h1>Copy &amp; Paste</h1>

<h1>---------------------</h1>

<h1>provide access to the clipboard for pbpaste, pbcopy</h1>

<h1>set-option -g default-command "reattach-to-user-namespace -l zsh"</h1>

<h1>set-option -g default-command "bash"</h1>

<p>set-option -g default-command "zsh"
set-window-option -g automatic-rename on</p>

<h1>use vim keybindings in copy mode</h1>

<p>setw -g mode-keys vi</p>

<h1>setup 'v' to begin selection as in Vim</h1>

<p>bind-key -t vi-copy v begin-selection</p>

<h1>bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"</h1>

<p>bind-key -t vi-copy y copy-pipe "xclip -selection clipboard -i"</p>

<h1>update default binding of 'Enter' to also use copy-pipe</h1>

<p>unbind -t vi-copy Enter</p>

<h1>bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"</h1>

<p>bind-key -t vi-copy Enter copy-pipe "xclip -selection clipboard -i"</p>

<h1>bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '</h1>

<h1>bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '</h1>

<p>bind y run "tmux show-buffer | xclip -i -selection clipboard"
bind C-y run "tmux show-buffer | xclip -i -selection clipboard"</p>

<h1>----------------------</h1>

<h1>set some pretty colors</h1>

<h1>----------------------</h1>

<h1>set pane colors - hilight the active pane</h1>

<h1>set-option -g pane-border-fg colour235 #base02</h1>

<h1>set-option -g pane-active-border-fg colour240 #base01</h1>

<h1>colorize messages in the command line</h1>

<h1>set-option -g message-bg black #base02</h1>

<h1>set-option -g message-fg brightred #orange</h1>

<h1>----------------------</h1>

<h1>Status Bar</h1>

<h1>-----------------------</h1>

<p>set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set-option -g status-position top    # position the status bar at top of screen</p>

<h1>visual notification of activity in other windows</h1>

<p>setw -g monitor-activity on
set -g visual-activity on</p>

<h1>set color for status bar</h1>

<h1>set-option -g status-bg colour235 #base02</h1>

<h1>set-option -g status-bg default</h1>

<h1>set-option -g status-fg yellow #yellow</h1>

<h1>set-option -g status-fg white</h1>

<h1>set-option -g status-attr dim</h1>

<h1>set window list colors - red for active and cyan for inactive</h1>

<p>set-window-option -g window-status-fg white
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr bright</p>

<p>set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg yellow
set-window-option -g window-status-current-attr bright</p>

<h1>show host name and IP address on left side of status bar</h1>

<p>set -g status-left-length 70
set -g status-left "#[fg=green]#h@#[fg=yellow]#(ifconfig eth0 | grep 'inet ' | awk '{print $2}')"</p>

<h1>show session name, window &amp; pane number, date and time on right side of</h1>

<h1>status bar</h1>

<p>set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P#[fg=yellow]::%d %b %Y::#[fg=green]%l:%M %p::"</p>

<h4>COLOUR (Solarized 256)</h4>

<h1>default statusbar colors</h1>

<p>set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default</p>

<h1>default window title colors</h1>

<h1>set-window-option -g window-status-fg colour244 #base0</h1>

<h1>set-window-option -g window-status-bg default</h1>

<h1>set-window-option -g window-status-attr dim</h1>

<h1>active window title colors</h1>

<h1>set-window-option -g window-status-current-fg colour166 #orange</h1>

<h1>set-window-option -g window-status-current-bg default</h1>

<h1>set-window-option -g window-status-current-attr bright</h1>

<p>set-window-option -g window-status-current-format "#[fg=colour235, bg=colour166]⮀#[fg=colour255, bg=colour166]#I:#W #[fg=colour166, bg=colour235]⮀"
set-window-option -g window-status-format "#[fg=colour235, bg=colour244]⮀#[fg=colour255, bg=colour244]#I:#W#F#[fg=colour244, bg=colour235]⮀"</p>

<h1>pane border</h1>

<p>set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01</p>

<h1>message text</h1>

<p>set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange</p>

<h1>pane number display</h1>

<p>set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange</p>

<h1>clock</h1>

<p>set-window-option -g clock-mode-colour colour64 #green</p>

<h1>Smart pane switching with awareness of vim splits</h1>

<p>bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(<sup>|\/)vim(diff)?$'</sup> &amp;&amp; tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(<sup>|\/)vim(diff)?$'</sup> &amp;&amp; tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(<sup>|\/)vim(diff)?$'</sup> &amp;&amp; tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(<sup>|\/)vim(diff)?$'</sup> &amp;&amp; tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(<sup>|\/)vim(diff)?$'</sup> &amp;&amp; tmux send-keys 'C-\') || tmux select-pane -l"</p>

<h1>key binding for ALT+num</h1>

<h1>switch windows alt+number</h1>

<p>bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
```</p>
]]></content>
  </entry>
  
</feed>
