<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: TIP | Code4Rain`s Blog]]></title>
  <link href="http://code4rain.github.com/blog/categories/tip/atom.xml" rel="self"/>
  <link href="http://code4rain.github.com/"/>
  <updated>2014-03-20T23:39:08+09:00</updated>
  <id>http://code4rain.github.com/</id>
  <author>
    <name><![CDATA[Alex Kyoungdon Jang]]></name>
    <email><![CDATA[code4rain@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PUSH된 COMMIT내용 수정하기(Gerrit Review전)]]></title>
    <link href="http://code4rain.github.com/blog/2012/12/14/pushdoen-commitnaeyong-sujeonghagi-gerrit-reviewjeon/"/>
    <updated>2012-12-14T12:59:00+09:00</updated>
    <id>http://code4rain.github.com/blog/2012/12/14/pushdoen-commitnaeyong-sujeonghagi-gerrit-reviewjeon</id>
    <content type="html"><![CDATA[<p>Git에서 수정하고 Gerrit에 Push를 하였으나 아직 Review가 끝나지 않아 Merge되지 않은 상태에서 Commit을 수정해서 다시 Gerrit에 Patch #2로 올리는 간단한 방법을 설명한다.</p>

<p><code>수정하고 싶은 commit이 현재 HEAD라고 가정</code></p>

<h3>comit에 있는 일부 파일만 변경하고 싶을 때</h3>

<pre><code>1. 수정하고 싶은 파일(a.c) 편집
2. git add a.c
3. git commit --amend -C HEAD // -C옵션은 HEAD에 있는 commit 내용을 그대로 사용한다는 의미입니다. 고로 Change Id도 유지되겠죠.
4. git push 
</code></pre>

<h3>commit에 있는 파일 중 하나를 이전으로 돌리고 싶을 떄</h3>

<pre><code>1. git checkout HEAD^ -- &lt;돌리고 싶은 파일명&gt; // HEAD^는 현재 HEAD 바로 전 commit 내용을 기준으로 돌리겠다는 의미. HEAD^ 위치에 원하는 Commit의 SHA ID를 써주어도 됨.
2. git add &lt;돌리고 싶은 파일명&gt;
3. git commit --amend -C HEAD
4. git push
</code></pre>
]]></content>
  </entry>
  
</feed>
